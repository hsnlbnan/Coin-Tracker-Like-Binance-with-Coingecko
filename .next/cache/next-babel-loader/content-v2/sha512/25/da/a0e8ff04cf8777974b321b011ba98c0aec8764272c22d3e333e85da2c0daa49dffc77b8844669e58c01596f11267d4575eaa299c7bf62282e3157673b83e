{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/appricot/Documents/GitHub/Coin-Tracker-Like-Binance-with-Coingecko/pages/coin/[id].js\";\nimport Link from \"next/link\";\nimport Layout from \"../../components/Layout\";\nimport styles from \"./Coin.module.css\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst Coin = ({\n  coin,\n  chart\n}) => {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.coin_page,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.coin_container,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: coin.image.large,\n          alt: coin.name,\n          className: styles.coin_image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.coin_name,\n          children: coin.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.coin_name,\n          children: coin.market_cap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.coin_ticker,\n          children: coin.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.coin_current,\n          children: [coin.market_data.current_price.try.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\"), \" \", \"\\u20BA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: chart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: \"/coin/[id]/daily\",\n            as: `/coin/${coin.name}/daily`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"G\\xFCnl\\xFCk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/coin/[id]/weekly\",\n            as: `/coin/${coin.name}/weekly`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"Haftal\\u0131k\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/coin/[id]/monthly\",\n            as: `/coin/${coin.name}/daily`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"Ayl\\u0131k\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps(context) {\n  let a = [];\n  let b = [];\n  const month = [\"Ocak\", \"Şubat\", \"Mart\", \"Nisan\", \"Mayıs\", \"Haziran\", \"Temmuz\", \"Ağustos\", \"Eylül\", \"Ekim\", \"Kasım\", \"Aralık\"];\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://api.coingecko.com/api/v3/coins/${id}`);\n  const resGraph = await fetch(`https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=try&days=1&interval=1000`);\n  const data = await res.json();\n  const resGraphData = await resGraph.json();\n  resGraphData.prices.toString().split(\",\").map((value, i) => {\n    if (i % 2 === 0) {\n      const d = new Date(parseInt(value));\n      const c = d.getDate() + \"  \" + month[d.getMonth()] + \" - \" + d.getUTCHours() + \":\" + d.getUTCMinutes();\n      a.push(c);\n    } else {\n      b.push(value);\n    }\n  });\n  const RGData = {\n    labels: a,\n    datasets: [{\n      label: \"Fiyatı\",\n      data: b,\n      fill: true,\n      backgroundColor: \"rgba(75,192,192,0.2)\",\n      borderColor: \"#ed9519\",\n      color: \"#fff\"\n    }]\n  };\n  return {\n    props: {\n      coin: data,\n      chart: RGData\n    }\n  };\n}\nexport default Coin;","map":{"version":3,"sources":["/Users/appricot/Documents/GitHub/Coin-Tracker-Like-Binance-with-Coingecko/pages/coin/[id].js"],"names":["Link","Layout","styles","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","Coin","coin","chart","coin_page","coin_container","image","large","name","coin_image","coin_name","market_cap","coin_ticker","symbol","coin_current","market_data","current_price","try","toString","replace","getServerSideProps","context","a","b","month","id","query","res","fetch","resGraph","data","json","resGraphData","prices","split","map","value","i","d","Date","parseInt","c","getDate","getMonth","getUTCHours","getUTCMinutes","push","RGData","labels","datasets","label","fill","backgroundColor","borderColor","color","props"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\nimport Layout from \"../../components/Layout\";\nimport styles from \"./Coin.module.css\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nimport { Line } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\nconst Coin = ({ coin, chart }) => {\n  return (\n    <Layout>\n      <div className={styles.coin_page}>\n        <div className={styles.coin_container}>\n          <img\n            src={coin.image.large}\n            alt={coin.name}\n            className={styles.coin_image}\n          />\n          <h1 className={styles.coin_name}>{coin.name}</h1>\n          <h1 className={styles.coin_name}>{coin.market_cap}</h1>\n          <p className={styles.coin_ticker}>{coin.symbol}</p>\n          <p className={styles.coin_current}>\n            {coin.market_data.current_price.try\n              .toString()\n              .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}{\" \"}\n            ₺\n          </p>\n          <>\n            <Line data={chart} />\n          </>\n          <>\n            <Link href=\"/coin/[id]/daily\" as={`/coin/${coin.name}/daily`}>\n              <a>Günlük</a>\n            </Link>\n            <Link href=\"/coin/[id]/weekly\" as={`/coin/${coin.name}/weekly`}>\n              <a>Haftalık</a>\n            </Link>\n            <Link href=\"/coin/[id]/monthly\" as={`/coin/${coin.name}/daily`}>\n              <a>Aylık</a>\n            </Link>\n          </>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getServerSideProps(context) {\n  let a = [];\n  let b = [];\n  const month = [\n    \"Ocak\",\n    \"Şubat\",\n    \"Mart\",\n    \"Nisan\",\n    \"Mayıs\",\n    \"Haziran\",\n    \"Temmuz\",\n    \"Ağustos\",\n    \"Eylül\",\n    \"Ekim\",\n    \"Kasım\",\n    \"Aralık\",\n  ];\n\n  const { id } = context.query;\n  const res = await fetch(`https://api.coingecko.com/api/v3/coins/${id}`);\n  const resGraph = await fetch(\n    `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=try&days=1&interval=1000`\n  );\n  const data = await res.json();\n  const resGraphData = await resGraph.json();\n\n  resGraphData.prices\n    .toString()\n    .split(\",\")\n    .map((value, i) => {\n      if (i % 2 === 0) {\n        const d = new Date(parseInt(value));\n        const c =\n          d.getDate() +\n          \"  \" +\n          month[d.getMonth()] +\n          \" - \" +\n          d.getUTCHours() +\n          \":\" +\n          d.getUTCMinutes();\n        a.push(c);\n      } else {\n        b.push(value);\n      }\n    });\n\n  const RGData = {\n    labels: a,\n    datasets: [\n      {\n        label: \"Fiyatı\",\n        data: b,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#ed9519\",\n        color: \"#fff\",\n      },\n    ],\n  };\n\n  return {\n    props: {\n      coin: data,\n      chart: RGData,\n    },\n  };\n}\n\nexport default Coin;\n"]},"metadata":{},"sourceType":"module"}